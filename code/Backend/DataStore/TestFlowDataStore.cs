using DataStore.EntityData;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Principal;
using System.Text;

public class TestFlowDataStore : DataStoreAdapter
{
    public string Name
    {
        get;
        set;
    }
    public Uri Host
    {
        get;
        set;
    }

    public TestFlowDataStore()
    {

    }

	public virtual void insertItem(TestPlan testPlan, TestItemBase testElement)
	{
		throw new System.NotImplementedException();
	}

	public virtual void editItem(TestItemBase item)
	{
		throw new System.NotImplementedException();
	}

	public virtual void removeItem(TestStep step)
	{
		throw new System.NotImplementedException();
	}

    public List<Project> getProjects()
    {
        using(var context = new testflowEntities())
        {
            IQueryable<TF_Projects> projects = context.TF_Projects.Where(p => p.TF_Collections.TF_User_Permissions.Any(c => c.User_Id == 1));

            List<Project> results = new List<Project>();
            foreach(TF_Projects p in projects)
            {
                Project project = new Project();
                project.Id = p.Project_Id;
                project.Name = p.Name;
                project.Store = "Test Flow Model";
                results.Add(project);
            }

            return results;
        }
        
    }

    public List<TestPlan> getPlans(string projectName)
    {
        throw new System.NotImplementedException();
    }

    public TestPlan getPlan(string projectName, int id)
    {
        throw new System.NotImplementedException();
    }
}

