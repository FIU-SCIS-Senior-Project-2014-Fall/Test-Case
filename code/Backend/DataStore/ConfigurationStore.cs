using DataStore.EntityData;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Principal;
using System.Text;

public struct UserCollections
{
    public List<DataStoreAdapter> adapters;
    public TestFlowDataStore tfStore;
}
/// <summary>
/// This class collects all of the users collections as adapters
/// </summary>
public class ConfigurationStore
{
	public virtual UserCollections getUserConfiguration(IPrincipal user)
	{
        // get the local model
        UserCollections Configuration = new UserCollections();
        Configuration.tfStore = new TestFlowDataStore(user.Identity.Name);
        Configuration.tfStore.Name = "Test Flow Collection";

        // create adapter list
        List<DataStoreAdapter> dList = new List<DataStoreAdapter>();

        // get the users adapters
        using (var context = new testflowEntities())
        {
            // query the user's collections
            var permissions = from p in context.TF_User_Permissions
                              where p.User_Id == Configuration.tfStore.User.User_Id 
                              select p.Collection_Id;
            var collections = from c in context.TF_Collections
                              where permissions.Contains(c.Collection_Id)
                              select c;

            // format
            foreach(TF_Collections c in collections)
            {
                TfsDataStore tfsStore = new TfsDataStore();
                tfsStore.Name = c.Name;
                tfsStore.Host = new Uri(c.Host);
                tfsStore.Id = c.Collection_Id;
                dList.Add(tfsStore);
            }
        }
        
        Configuration.adapters = dList;
        return Configuration;
	}
}

